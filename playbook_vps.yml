---
- name: Setup ssh port
  hosts: vps
  gather_facts: no

  tasks:
    - name: SSH Port Juggle
      ansible.builtin.import_tasks: tasks/sshd_port_juggling.yml
      when: environment != 'testing'



- name: Configure VPS personal server.
  hosts: vps

  vars_files:
    - vars/all.yml
    - vars/vps.yml


  roles:
    - role: hifis.unattended_upgrades
      unattended_automatic_reboot_time: 04:00  # noqa: var-naming[no-role-prefix]
      # apt-daily timer
      unattended_apt_daily_oncalendar: "*-*-* 01:00"  # noqa: var-naming[no-role-prefix]
      unattended_apt_daily_randomizeddelaysec: "60m"  # noqa: var-naming[no-role-prefix]
      # apt-daily-upgrade timer
      unattended_apt_daily_upgrade_oncalendar: "*-*-* 2:00"  # noqa: var-naming[no-role-prefix]
      unattended_apt_daily_upgrade_randomizeddelaysec: "60m"  # noqa: var-naming[no-role-prefix]
      become: true
    - role: geerlingguy.security
      security_ssh_port: "{{ ssh_port }}"
      security_ssh_permit_root_login: "yes"
      become: true
    - role: geerlingguy.docker
      become: true


  tasks:
    - name: Setup hostname
      block:
        - name: Update hostname
          ansible.builtin.hostname:
            name: "{{ device_name }}"
            use: "debian"
          become: true
        - name: Update /etc/hosts (add {{ device_name }})
          ansible.builtin.lineinfile:
            path: /etc/hosts
            regexp: '^(.*\b127.0.1.1\b.*?)(\s+\b{{ device_name }}\b.*|$)'
            line: "\\1 {{ device_name }}"
            backrefs: yes

    - name: Update and install new packages
      block:
        - name: Update apt cache
          ansible.builtin.apt:
            update_cache: true
            cache_valid_time: 3600
            upgrade: safe
            autoremove: true
          become: true
        - name: Install packages
          ansible.builtin.apt:
            name: "{{ packages_to_install }}"
            state: present
          become: true

    - name: Setup zsh
      when: '"zsh" in packages_to_install'
      block:
        - name: Check zsh is installed
          ansible.builtin.command: which zsh
          register: zsh_installed
          changed_when: false
        - name: Install zsh
          ansible.builtin.apt:
            name: zsh
            state: present
          when: not zsh_installed
          become: true
        - name: Set zsh as default shell
          ansible.builtin.command: chsh -s /bin/zsh "{{ username }}"
          become: true
          changed_when: false
        - name: Paste style config block
          ansible.builtin.blockinfile:
            path: ~/.zshrc
            marker: "# {mark} ANSIBLE MANAGED BLOCK: style config"
            block: "{{ lookup('file', 'files/.zshrc.style-config-block.zsh') }}"
            create: yes
            mode: 0644
            owner: "{{ username }}"

    - name: Setup cron to clean docker images
      ansible.builtin.cron:
        name: "Clean docker images"
        minute: "0"
        hour: "0"
        job: "docker system prune -a -f"
        cron_file: "clean_docker_images"
        user: "{{ username }}"
      become: true

    - name: Create base directory
      ansible.builtin.file:
        path: "{{ infra_dir }}"
        state: directory
        mode: 0755
    - name: Make soft link to home
      ansible.builtin.file:
        src: "{{ infra_dir }}"
        dest: "~/infra"
        state: link
        force: yes

    - name: Copy the compose file
      ansible.builtin.template:
        src: files/vps-docker-compose.yml.j2
        dest: "{{ infra_dir }}/docker-compose.yml"
        mode: 0755
      register: copy_docker_compose

    - name: Copy the wineguard config file
      ansible.builtin.template:
        src: files/vps-server-wg0.conf.j2
        dest: "{{ infra_dir }}/server_wg0.conf"
        mode: 0600
      register: copy_wineguard_config

    - name: Validate docker compose file
      ansible.builtin.command:
        cmd: docker compose config
        chdir: "{{ infra_dir }}"
      changed_when: false

    - name: Start containers
      ansible.builtin.command:
        cmd: docker compose up -d --pull always --build
        chdir: "{{ infra_dir }}"
      changed_when: false
      tags: run_docker

  handlers:
    - name: Restart wineguard container
      ansible.builtin.command:
        cmd: docker compose restart
        chdir: "{{ infra_dir }}"
      listen: copy_wineguard_config
      changed_when: false
      tags: run_docker
