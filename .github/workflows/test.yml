name: "Test playbooks"


on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron: "23 2 * * 2"  # semi-random time once a week


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
          cache: 'pip' # caching pip dependencies

      - name: Install python and ansible requirements
        run: |
          python -m pip install -r requirements.txt
          ansible-galaxy install -r requirements.yml

      - name: Create dummy .vault_pass.txt
        run: |
          echo "test" > .vault_pass.txt

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint

  test-macbook-playbook:
    runs-on: macos-13

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Uninstall GitHub Actions' built-in Homebrew
        run: sudo /bin/bash tests/uninstall-homebrew.sh

      - name: Uninstall GitHub Actions' built-in browser installs
        run: |
          ls -lah /Applications
          sudo rm -rf /Applications/Firefox.app
          sudo rm -rf /Applications/Google\ Chrome.app
          sudo rm -rf /usr/local/bin/firefox
          sudo rm -rf /usr/local/bin/chromedriver

      - name: Install python and ansible requirements
        run: |
          python -m pip install -r requirements.txt
          ansible-galaxy install -r requirements.yml

      - name: Create .vault_pass.txt
        run: |
          echo "${{ secrets.VAULT_PASS }}" > .vault_pass.txt

      - name: Test the playbook's syntax
        run: ansible-playbook playbook_macbook.yml -i inventory-test.ini --syntax-check

      - name: Test the playbook
        run: ansible-playbook playbook_macbook.yml -i inventory-test.ini -e "environment=testing" -e "admin_password=admin_password user_account_password=" --skip-tags "mas"
        env:
          ANSIBLE_FORCE_COLOR: '1'

      - name: Idempotence check
        run: |
          idempotence=$(mktemp)
          ansible-playbook playbook_macbook.yml -i inventory-test.ini -e "environment=testing" -e "admin_password=admin_password user_account_password=" ---skip-tags "mas" | tee -a ${idempotence}
          tail ${idempotence} | grep -q 'changed=0.*failed=0' && (echo 'Idempotence test: pass' && exit 0) || (echo 'Idempotence test: fail' && exit 1)
        env:
          ANSIBLE_FORCE_COLOR: '1'

  test-vps-playbook:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install python and ansible requirements
        run: |
          python -m pip install -r requirements.txt
          ansible-galaxy install -r requirements.yml

      - name: Create .vault_pass.txt
        run: |
          echo "${{ secrets.VAULT_PASS }}" > .vault_pass.txt

      - name: Test the playbook's syntax
        run: ansible-playbook playbook_vps.yml -i inventory-test.ini --syntax-check

      - name: Test the playbook
        run: ansible-playbook playbook_vps.yml -i inventory-test.ini -e "environment=testing" --skip-tags "run_docker"
        env:
          ANSIBLE_FORCE_COLOR: '1'

      - name: Idempotence check
        run: |
          idempotence=$(mktemp)
          ansible-playbook playbook_vps.yml -i inventory-test.ini -e "environment=testing" --skip-tags "run_docker" | tee -a ${idempotence}
          tail ${idempotence} | grep -q 'changed=0.*failed=0' && (echo 'Idempotence test: pass' && exit 0) || (echo 'Idempotence test: fail' && exit 1)
        env:
          ANSIBLE_FORCE_COLOR: '1'
