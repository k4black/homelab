# {{ ansible_managed }}

version: '3.8'


networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: {{ vps_docker_network_subnet }}
          gateway: {{ vps_docker_network_gateway }}


services:
  ### Utils ###

  whoami:
    image: traefik/whoami
    container_name: whoami
    hostname: whoami.homelab.local
    ports:
      - "5000:80"
    restart: unless-stopped

  ## Networking ##
  duckdns:
    image: linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      TZ: {{ timezone }}
      SUBDOMAINS: {{ vps_duckdns_subdomain }}
      TOKEN: {{ duckdns_token }}
      LOG_FILE: true
    restart: unless-stopped

  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      PUID: 1000
      PGID: 1000
      TZ: {{ timezone }}
      SERVERURL: {{ vps_duckdns_subdomain }}.duckdns.org
      SERVERPORT: 51820
      INTERNAL_SUBNET: {{ vpn_network_subnet }}
    volumes:
      - {{ containers_setup_configs_dir }}/server-wg0.conf:/config/wg_confs/server_wg0.conf:ro
      - /lib/modules:/lib/modules
    ports:
      - "51820:51820/udp"
      # - "5000:5000"  # for wireguard-ui, set here as network_mode: service:wireguard
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    healthcheck:
      test: ["CMD", "wg", "show", "server_wg0"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # TODO: thing about unbound to resolve DNS and not send it to the google etc
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    environment:
      PUID: 1000
      PGID: 1000
      TZ: {{ timezone }}
      WEBPASSWORD: password  # for http://pi.hole/admin
      PIHOLE_DNS_: "1.1.1.1;8.8.8.8"
      DNSMASQ_LISTENING: "local"
      WEBTHEME: default-dark
      FTLCONF_LOCAL_IPV4: "{{ local_ipv4 }}"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8053:80/tcp"  # custom port for web interface
    volumes:
      - {{ containers_setup_configs_dir }}/pihole/:/etc/pihole/:rw
      - {{ containers_setup_configs_dir }}/pihole-dnsmasq.d:/etc/dnsmasq.d/:rw
    networks:
      default:
        ipv4_address: {{ vps_docker_network_pihole_ip }}
    healthcheck:
      test: ["CMD", "dig", "+norecurse", "+retry=0", "@127.0.0.1", "pi.hole"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  ### Metrics ###
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    # healthcheck: included in the image
    restart: unless-stopped
