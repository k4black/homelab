---

- name: Copy docker-compose file using {{ containers_setup_docker_compose_template }}
  ansible.builtin.template:
    src: "{{ containers_setup_docker_compose_template }}"
    dest: "{{ containers_setup_configs_dir }}/docker-compose.yml"
    mode: 0644
    owner: "{{ containers_setup_user }}"
    group: "{{ containers_setup_user }}"
  become: true

- name: Debug docker-compose file on the server
  ansible.builtin.command:
    cmd: cat docker-compose.yml
    chdir: "{{ containers_setup_configs_dir }}"
  changed_when: false
  become: true

- name: Make directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  become: true
  loop: "{{ containers_setup_make_dirs }}"

- name: Create empty files if they don't exist
  ansible.builtin.copy:
    content: ""
    dest: "{{ item }}"
    mode: 0644
    owner: "{{ containers_setup_user }}"
    group: "{{ containers_setup_user }}"
    force: false
  become: true
  loop: "{{ containers_setup_touch_files }}"

- name: Copy and apply templates to configs directory
  ansible.builtin.template:
    src: "{{ item.key }}"
    dest: "{{ containers_setup_configs_dir }}/{{ item.value }}"
    mode: 0644
    owner: "{{ containers_setup_user }}"
    group: "{{ containers_setup_user }}"
  become: true
  loop: "{{ containers_setup_config_templates | dict2items }}"
  when: item.key.endswith('.j2')

- name: Copy static files to configs directory
  ansible.builtin.copy:
    src: "{{ item.key }}"
    dest: "{{ containers_setup_configs_dir }}/{{ item.value }}"
    mode: 0644
    owner: "{{ containers_setup_user }}"
    group: "{{ containers_setup_user }}"
  become: true
  loop: "{{ containers_setup_config_templates | dict2items }}"
  when: not item.key.endswith('.j2')

- name: Validate docker compose file
  ansible.builtin.command:
    cmd: docker compose config
    chdir: "{{ containers_setup_configs_dir }}"
  changed_when: false
  become: true
