---

- name: Ensure the necessary groups exists
  block:
    - name: Ensure the necessary groups exists
      ansible.builtin.group:
        name: "{{ item }}"
        state: present
      loop:
        - docker
    - name: Create a login user group
      ansible.builtin.group:
        name: "{{ linux_server_setup_login_user }}"
        gid: "{{ linux_server_setup_login_user_gid }}"
        state: present

- name: Create a login user
  ansible.builtin.user:
    name: "{{ linux_server_setup_login_user }}"
    password: "{{ linux_server_setup_login_password | password_hash('sha512') }}"
    uid: "{{ linux_server_setup_login_user_uid }}"
    groups:
      - sudo
      - docker
      - users
    state: present
    append: true

- name: Chmod the user home directory
  ansible.builtin.file:
    path: "/home/{{ linux_server_setup_login_user }}"
    state: directory
    mode: 0755
    owner: "{{ linux_server_setup_login_user }}"
    group: "{{ linux_server_setup_login_user }}"
    recurse: true

- name: Allow sudo group to have passwordless sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'

- name: Copy the public SSH key
  ansible.posix.authorized_key:
    user: "{{ linux_server_setup_login_user }}"
    state: present
    key: "{{ linux_server_setup_login_ssh_public_key }}"
  when: testing is undefined or testing != 'true'

- name: Disable cron e-mail notifications
  ansible.builtin.cron:
    name: MAILTO
    user: "{{ linux_server_setup_login_user }}"
    env: true
    job: ""
