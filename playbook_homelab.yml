---

- name: Setup ssh port
  hosts: homelab
  gather_facts: false

  vars_files:
    - vars/all.yml
    - vars/homelab.yml

  tasks:
    - name: SSH Port Juggle
      ansible.builtin.import_tasks: tasks/sshd_port_juggling.yml
      when: testing is undefined or testing != 'true'
    - name: SSH User Juggle
      ansible.builtin.import_tasks: tasks/sshd_login_user_juggling.yml
      when: testing is undefined or testing != 'true'
    - name: Read ssh_public_key from {{ ssh_public_key_file }}
      ansible.builtin.set_fact:
        ssh_public_key: "{{ lookup('file', ssh_public_key_file) }}"
      when: testing is undefined or testing != 'true'


- name: Setup local_ipv4
  hosts: homelab
  gather_facts: true

  tasks:
    # https://medium.com/opsops/ansible-default-ipv4-is-not-what-you-think-edb8ab154b10
    - name: Geather local_ipv4
      ansible.builtin.set_fact:
        local_ipv4: "{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}"
    - name: Debug local_ipv4
      ansible.builtin.debug:
        var: local_ipv4


- name: Setup for testing
  hosts: homelab
  gather_facts: false
  become: true

  tasks:
    - name: For testing at github actions set username to "runneradmin"
      ansible.builtin.set_fact:
        username: "runneradmin"
      when: testing is defined and testing == 'true'

    - name: List all ports used
      block:
        - name: List all ports used
          ansible.builtin.command: netstat -tulpn
          become: true
          changed_when: false
          when: testing is defined and testing == 'true'
          register: netstat_output
        - name: Debug output ports
          ansible.builtin.debug:
            var: netstat_output.stdout_lines
          when: testing is defined and testing == 'true'


- name: Configure HomeLab personal server.
  hosts: homelab

  vars_files:
    - vars/all.yml
    - vars/homelab.yml


  pre_tasks:
    - name: Disable VPN if it is enabled
      ansible.builtin.shell: |
        sudo systemctl stop wg-quick@wg0
      become: true
      changed_when: false
      failed_when: false
      when: testing is undefined or testing != 'true'
    - name: Check if pi user exists
      command: id -u pi
      register: pi_user_check
      ignore_errors: yes
    - name: Rename pi user and group if exists
      block:
        - name: Rename pi user
          user:
            name: pi
            newname: "{{ username }}"
            move_home: yes
        - name: Rename pi group
          group:
            name: pi
            newname: "{{ username }}"
      when: pi_user_check.rc == 0

  roles:
    - role: geerlingguy.raspberry-pi  # disable hdmi, set gpu_mem to 16 and 1200ma for usb
      when: testing is undefined or testing != 'true'
      become: true

    - role: packages_install
      become: true

    - role: linux_server_setup
      vars:
        linux_server_setup_hostname: "{{ device_name }}"
        linux_server_setup_login_user: "{{ username }}"
        linux_server_setup_login_password: "{{ password }}"
        linux_server_setup_login_user_uid: 1000
        linux_server_setup_login_user_gid: 1000
        linux_server_setup_login_ssh_public_key: "{{ ssh_public_key }}"
        linux_server_setup_open_ports:
          - {port: 22, protocol: "tcp", comment: "default ssh"}
          - {port: "{{ ssh_port }}", protocol: "tcp", comment: "custom ssh"}
          - {port: 51820, protocol: "udp", comment: "wireguard"}
          - {port: 80, protocol: "tcp", comment: "http"}
          - {port: 443, protocol: "tcp", comment: "https"}

    - role: hifis.unattended_upgrades
      vars:
        unattended_automatic_reboot_time: 04:00  # noqa: var-naming[no-role-prefix]
        # apt-daily timer
        unattended_apt_daily_oncalendar: "*-*-* 01:00"  # noqa: var-naming[no-role-prefix]
        unattended_apt_daily_randomizeddelaysec: "60m"  # noqa: var-naming[no-role-prefix]
        # apt-daily-upgrade timer
        unattended_apt_daily_upgrade_oncalendar: "*-*-* 2:00"  # noqa: var-naming[no-role-prefix]
        unattended_apt_daily_upgrade_randomizeddelaysec: "60m"  # noqa: var-naming[no-role-prefix]
      become: true

    - role: geerlingguy.security
      security_ssh_port: "{{ ssh_port }}"
      security_ssh_permit_root_login: "no"
      become: true

    - role: geerlingguy.docker
      become: true

    - role: zsh_setup
      vars:
        zsh_setup_set_default_shell: true
        zsh_setup_config_src: files/.zshrc.style-config-block.zsh
        zsh_setup_user: "{{ username }}"
      become: true


  tasks:
    # https://www.jeffgeerling.com/blog/2023/reducing-raspberry-pi-5s-power-consumption-140x
    - name: Lower power consumptions for pi5
      when: testing is undefined or testing != 'true'
      block:
        - name: Create temp boot.conf file
          ansible.builtin.template:
            src: files/homelab/boot.conf.j2
            dest: /tmp/boot.conf
            mode: 0755
            owner: root
            group: root
          become: true
        - name: Apply with rpi-eeprom-config
          ansible.builtin.command: rpi-eeprom-config --apply /tmp/boot.conf
          changed_when: false
          become: true

    - name: Copy docker configs and run containers
      ansible.builtin.include_role:
        name: containers_setup
      vars:
        containers_setup_user: "{{ username }}"
        containers_setup_configs_dir: "{{ services_configs_dir }}"
        containers_setup_data_dir: "{{ services_data_dir }}"
        containers_setup_docker_compose_template: "files/homelab/docker-compose.yml.j2"
        containers_setup_make_dirs:
          - "{{ services_data_dir }}/traefik-certs"
          - "{{ services_data_dir }}/influxdb-data"
          - "{{ services_configs_dir }}/influxdb-config"
          - "{{ services_configs_dir }}/home-assistant-config"
          - "{{ services_configs_dir }}/heimdall-config"
          - "{{ services_configs_dir }}/pihole"
          - "{{ services_configs_dir }}/pihole-dnsmasq.d"
        containers_setup_touch_files:
          - "{{ services_configs_dir }}/traefik-acme.json"
        containers_setup_config_templates:
          files/homelab/server-wg0.conf.j2: "server-wg0.conf"  # TODO: fix permissions
          files/homelab/home-assistant-config.yml.j2: "home-assistant-config/configuration.yaml"
          files/homelab/influxdb-config.toml.j2: "influxdb-config/influxdb-config.toml"
          files/homelab/influxdb-init-script.sh.j2: "influxdb-init-script.sh"
          files/homelab/pihole-02-custom-dns.conf.j2: "pihole-dnsmasq.d/02-custom-dns.conf"
          files/homelab/pihole-adlists.list: "pihole/adlists.list"
          files/homelab/pihole-custom.list.j2: "pihole/custom.list"
          files/homelab/telegraf.conf: "telegraf.conf"
          files/homelab/traefik-config.yml.j2: "traefik-config.yml"

  handlers:
#    - name: Restart avahi service
#      ansible.builtin.service:
#        name: avahi-daemon
#        state: restarted
#      become: true
#      changed_when: false
